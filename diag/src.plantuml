@startuml
class Imagen {
- int name
- int improvements
- boolean resize
- boolean copy
+ void setName(int)
+ void setImprovements()
+ boolean setResize(boolean)
+ boolean setCopy(boolean)
+ int getName()
+ int getImprovements()
+ boolean getResize()
+ boolean getCopy()
}
class Creador {
+ void run()
}
class Main {
+ {static} void main(String[])
}
class Movedores {
- Contenedor ContenedorFinal
- int movidasCount
+ void run()
}
class Mejorador {
- int mejoradas
- boolean[] ImagenesRevisadas
+ void run()
}
abstract class Proceso {
# int nombre
# Contenedor ContenedorInicial
+ int getNombre()
+ Contenedor getContenedorInicial()
}
class Log {
- Thread[] creadoresThreads
- Thread[] mejoradoresThreads
- Thread[] ajustadoresThreads
- Thread[] movedoresThreads
- Contenedor ContenedorInicial
- Contenedor ContenedorFinal
+ void run()
}
class Contenedor {
- List<Imagen> imagenes
- int ImagenesIngresadas
- int ImagenesMejoradas
- int ImagenesAjustadas
- int ImagenesEliminadas
~ int random_name
~ Imagen imagen
+ void agregarImagen(Imagen)
+ Imagen getImagen()
+ void eliminarImagen(Imagen)
+ List<Imagen> getList()
+ void setImagenMejorada()
+ void setImagenAjustada()
+ void setImagenEliminada()
+ int getImagenesIngresadas()
+ int getImagenesMejoradas()
+ int getImagenesAjustadas()
+ int getImagenesEliminadas()
}
class Ajustadores {
- int ajustadasCount
+ void run()
}


java.lang.Runnable <|.. Creador
Proceso <|-- Creador
java.lang.Runnable <|.. Movedores
Proceso <|-- Movedores
java.lang.Runnable <|.. Mejorador
Proceso <|-- Mejorador
java.lang.Runnable <|.. Log
java.lang.Runnable <|.. Ajustadores
Proceso <|-- Ajustadores
@enduml